{"version":3,"sources":["webpack:///vendor.80a678db8a7f26a985da.js","webpack:///webpack/bootstrap 78c23d024bec5b17ed1d","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/api/baseUrl.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","0","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","global","_userApi","getUsers","then","result","usersBody","forEach","user","firstName","lastName","email","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","Headers","headers","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","arrayBuffer","ArrayBuffer","Error","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","self","list","values","getAll","has","hasOwnProperty","set","thisArg","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","XMLHttpRequest","responseText","open","withCredentials","responseType","setRequestHeader","send","polyfill","getBaseUrl","getQueryStringParameterByName","href","regex","RegExp","results","exec"],"mappings":"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","file":"vendor.80a678db8a7f26a985da.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0,\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"d41d8cd98f00b204e980\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _userApi = __webpack_require__(3);\n\t\n\t// Populate table of users via API call.\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var usersBody = \"\";\n\t\n\t  result.forEach(function (user) {\n\t    usersBody += '<tr>\\n      <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n      <td>' + user.id + '</td>\\n      <td>' + user.firstName + '</td>\\n      <td>' + user.lastName + '</td>\\n      <td>' + user.email + '</td>\\n      </tr>';\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = usersBody;\n\t\n\t  var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t  // Must use array.from to create a real array from a DOM collection\n\t  // getElementsByClassname only returns an \"array like\" object\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(4);\n\t\n\tvar _baseUrl = __webpack_require__(5);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t    return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t    return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t    return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\t// Can't call func delete since reserved word.\n\tfunction del(url) {\n\t    var request = new Request(baseUrl + url, {\n\t        method: 'DELETE'\n\t    });\n\t\n\t    return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t    return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t    console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t(function() {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  var support = {\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob();\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this._initBody(bodyInit)\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var status = (xhr.status === 1223) ? 204 : xhr.status\n\t        if (status < 100 || status > 599) {\n\t          reject(new TypeError('Network request failed'))\n\t          return\n\t        }\n\t        var options = {\n\t          status: status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})();\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://calm-depths-76172.herokuapp.com/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t    if (!url) url = window.location.href;\n\t    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t        results = regex.exec(url);\n\t    if (!results) return null;\n\t    if (!results[2]) return '';\n\t    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** vendor.80a678db8a7f26a985da.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0,\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"d41d8cd98f00b204e980\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 78c23d024bec5b17ed1d\n **/","import './index.css';\r\n\r\nimport {getUsers, deleteUser} from './api/userApi';\r\n\r\n// Populate table of users via API call.\r\ngetUsers().then(result => {\r\n  let usersBody = \"\";\r\n\r\n  result.forEach(user => {\r\n    usersBody+= `<tr>\r\n      <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\r\n      <td>${user.id}</td>\r\n      <td>${user.firstName}</td>\r\n      <td>${user.lastName}</td>\r\n      <td>${user.email}</td>\r\n      </tr>`\r\n  });\r\n\r\n  global.document.getElementById('users').innerHTML = usersBody;\r\n\r\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\r\n  \r\n    // Must use array.from to create a real array from a DOM collection\r\n    // getElementsByClassname only returns an \"array like\" object\r\n    Array.from(deleteLinks, link => {\r\n      link.onclick = function(event) {\r\n        const element = event.target;\r\n        event.preventDefault();\r\n        deleteUser(element.attributes[\"data-id\"].value);\r\n        const row = element.parentNode.parentNode;\r\n        row.parentNode.removeChild(row);\r\n      };\r\n    });\r\n});\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\r\nimport getBaseUrl from './baseUrl';\r\n\r\nconst baseUrl = getBaseUrl();\r\n\r\nexport function getUsers(){\r\n    return get('users');\r\n}\r\n\r\nexport function deleteUser(id) {\r\n    return del(`users/${id}`);\r\n  }\r\n\r\nfunction get(url){\r\n    return fetch(baseUrl + url).then(onSuccess,  onError);\r\n}\r\n\r\n// Can't call func delete since reserved word.\r\nfunction del(url) {\r\n    const request = new Request(baseUrl + url, {\r\n      method: 'DELETE'\r\n    });\r\n  \r\n    return fetch(request).then(onSuccess, onError);\r\n  }\r\n\r\nfunction onSuccess(response){\r\n    return response.json();\r\n}\r\n\r\nfunction onError(error){\r\n    console.log(error); // eslint-disable-line no-console\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 4\n ** module chunks = 1\n **/","export default function getBaseUrl() {\r\n    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://calm-depths-76172.herokuapp.com/';\r\n  }\r\n  \r\n  function getQueryStringParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n  \n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}